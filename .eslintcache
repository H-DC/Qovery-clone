[{"D:\\laCapsule\\portfolio\\qovery-clone\\src\\index.js":"1","D:\\laCapsule\\portfolio\\qovery-clone\\src\\App.js":"2","D:\\laCapsule\\portfolio\\qovery-clone\\src\\reportWebVitals.js":"3","D:\\laCapsule\\portfolio\\qovery-clone\\src\\Home\\Home.js":"4","D:\\laCapsule\\portfolio\\qovery-clone\\src\\Home\\Header\\Header.js":"5","D:\\laCapsule\\portfolio\\qovery-clone\\src\\Home\\Section\\Section.js":"6","D:\\laCapsule\\portfolio\\qovery-clone\\src\\Home\\Usage\\Usage.js":"7","D:\\laCapsule\\portfolio\\qovery-clone\\src\\Home\\Grid\\Grid.js":"8","D:\\laCapsule\\portfolio\\qovery-clone\\src\\Home\\Footer\\Footer.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":121,"mtime":1608722453773,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":444,"mtime":1609238296955,"results":"14","hashOfConfig":"11"},{"size":2085,"mtime":1610052308844,"results":"15","hashOfConfig":"11"},{"size":1624,"mtime":1609173161218,"results":"16","hashOfConfig":"11"},{"size":1849,"mtime":1609185176905,"results":"17","hashOfConfig":"11"},{"size":3312,"mtime":1609262067934,"results":"18","hashOfConfig":"11"},{"size":1311,"mtime":1609256623895,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1wzfcja",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"D:\\laCapsule\\portfolio\\qovery-clone\\src\\index.js",[],["43","44"],"D:\\laCapsule\\portfolio\\qovery-clone\\src\\App.js",[],"D:\\laCapsule\\portfolio\\qovery-clone\\src\\reportWebVitals.js",[],"D:\\laCapsule\\portfolio\\qovery-clone\\src\\Home\\Home.js",[],"D:\\laCapsule\\portfolio\\qovery-clone\\src\\Home\\Header\\Header.js",["45","46","47","48"],"D:\\laCapsule\\portfolio\\qovery-clone\\src\\Home\\Section\\Section.js",["49","50","51","52","53","54"],"import React, { useEffect,useRef } from 'react';\r\nimport './Section.css';\r\n\r\nimport Main from '../../assets/sectionMain.png'\r\nimport One from '../../assets/sectionOne.png'\r\nimport Two from '../../assets/sectionTwo.png'\r\nimport Three from '../../assets/sectionThree.png'\r\nimport Four from '../../assets/sectionFour.png'\r\n\r\n\r\nfunction Section() {\r\n\r\n    useEffect(()=>{\r\n       const sectionImg = document.getElementById(\"mainImg\");\r\n       const images = document.querySelectorAll('.sectionAnim')\r\n\r\n       const sectionObs = new IntersectionObserver((entries)=>{\r\n            console.log(entries[0].intersectionRatio);\r\n            images.forEach((img,i) => {\r\n                (entries[0].intersectionRatio>0)&&(img.style.animation =`pop 1s ease ${i*250}ms`);\r\n            });\r\n       }, { threshold: 0.9} )\r\n       sectionObs.observe(sectionImg);\r\n\r\n    },[])\r\n\r\n    return (\r\n        <div id=\"sectionContainer\">\r\n            <h3>How does it work?</h3>\r\n            <p>Qovery Engine is an open-source abstraction layer product that turns easy apps deployment on AWS, GCP, Azure and others Cloud providers. The Qovery Engine is coded in Rust and takes advantage of Terraform, Helm, Kubectl, Docker to manage resources.</p>\r\n            <div className=\"sectionImgBox\">\r\n                <img src={Main} id=\"mainImg\"/>\r\n                <img src={One} className=\"sectionAnim\"/>\r\n                <img src={Two} className=\"sectionAnim\"/>\r\n                <img src={Three} className=\"sectionAnim\"/>\r\n                <img src={Four} className=\"sectionAnim\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section\r\n","D:\\laCapsule\\portfolio\\qovery-clone\\src\\Home\\Usage\\Usage.js",["55"],"import React from 'react';\r\nimport Prism from 'prismjs';\r\nimport { RiDiscordFill,RiGithubFill } from \"react-icons/ri\";\r\nimport './prism.css';\r\nimport './Usage.css';\r\n\r\nfunction Usage() {\r\n    return (\r\n        <div id=\"usageContainer\">\r\n            <div id=\"usageBanner\">\r\n                <h3>Usage</h3>\r\n                <p>Initialize EKS (AWS Kubernetes) and ECR (AWS container registry) on AWS</p>\r\n            </div>\r\n            <pre>\r\n                <code className=\"language-javascript\">\r\n                {`\r\n    let engine = Engine::new( \r\n        context, // parameters \r\n        local_docker, // initialize Docker as a Build Platform \r\n        ecr, // initialize Elastic Container Registry \r\n        aws, // initialize AWS account \r\n        cloudflare, // initialize Cloudflare as DNS Nameservers \r\n    );\r\n\r\n    let session = match engine.session() { \r\n        Ok(session) => session, // get the session \r\n        Err(config_error) => panic!(\"configuration error {:?}\", config_error), \r\n    };\r\n\r\n    let mut tx = session.transaction();\r\n    \r\n    // create EKS (AWS managed Kubernetes cluster)\r\n    tx.create_kubernetes(&eks);\r\n    \r\n    // create the infrastructure and wait for the result \r\n    match tx.commit() { \r\n        TransactionResult::Ok => println!(\"OK\"), \r\n        TransactionResult::Rollback(commit_err) => println!(\"ERROR but rollback OK\"), \r\n        TransactionResult::UnrecoverableError(commit_err, rollback_err) => println!(\"FATAL ERROR\") \r\n    };\r\n                `}\r\n                </code>\r\n            </pre>\r\n\r\n            <div id=\"usageBtnContainer\">\r\n                    <button><RiGithubFill className=\"headerIcon\"/>See more on Github</button>\r\n                    <button><RiDiscordFill className=\"headerIcon\"/>Join us on Discord</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Usage\r\n","D:\\laCapsule\\portfolio\\qovery-clone\\src\\Home\\Grid\\Grid.js",["56","57","58","59","60","61","62","63"],"import React, { useEffect } from 'react'\r\nimport './Grid.css'\r\nimport grid1 from '../../assets/grid1.jpg'\r\nimport grid2 from '../../assets/grid2.jpg'\r\nimport grid3 from '../../assets/grid3.jpg'\r\nimport grid4 from '../../assets/sectionMain.png'\r\n\r\n\r\nfunction Grid() {\r\n\r\n    useEffect(()=>{\r\n        const lineOne = document.querySelectorAll(\"#gridContainer > div:nth-child(1)\");\r\n        const cardsOne = lineOne[0].childNodes\r\n \r\n        const lineOneObs = new IntersectionObserver((entries)=>{\r\n             cardsOne.forEach((card,i) => {\r\n                 (entries[0].intersectionRatio>0)&&(card.className = 'card');\r\n             });\r\n        },{threshold:0.25} )\r\n        lineOneObs.observe(lineOne[0]);\r\n\r\n        const lineTwo = document.querySelectorAll(\"#gridContainer > div:nth-child(2)\");\r\n        const cardsTwo = lineTwo[0].childNodes\r\n \r\n        const lineTwoObs = new IntersectionObserver((entries)=>{\r\n             cardsTwo.forEach((card,i) => {\r\n                 (entries[0].intersectionRatio>0)&&(card.className = 'card');\r\n             });\r\n        },{threshold:0.25} )\r\n        lineTwoObs.observe(lineTwo[0]);\r\n    },[])\r\n\r\n    return (\r\n        <div id=\"gridContainer\">\r\n            <div>\r\n                <div className=\"hidden\">\r\n                    <img src={grid1}/>\r\n                    <h3>Deploy real world applications</h3>\r\n                    <p>Qovery Engine empowers you to deploy complex applications, such as a backend, a frontend, and a database in a very simple way.\r\n                        <br/><br/>Servers, networking, security, all is done by the Engine for you.</p>\r\n                    <a>SEE MORE</a>\r\n                </div>\r\n                <div className=\"hidden\">\r\n                    <img src={grid2}/>\r\n                    <h3>Resiliency is key</h3>\r\n                    <p>Qovery Engine knows when something goes wrong on the deployment of your applications. Qovery Engine is built with resiliency in mind. \r\n                        <br/><br/>A transactional engine inspired by what is provided into ACID databases has been developed at the heart of the product to rollback on a consistent and working application version when something goes wrong.</p>\r\n                    <a>SEE MORE</a>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"hidden\">\r\n                    <img src={grid3}/>\r\n                    <h3>On top of the best tools</h3>\r\n                    <p>Qovery Engine does not reinvent the wheel. It takes advantage of the best tools in the Cloud industry, such as Kubernetes, Terraform, and Helm to manage the deployment of the infrastructure and your applications.\r\n                        <br/><br/>Servers, networking, security, all is done by the Engine for you.</p>\r\n                    <a>SEE MORE</a>\r\n                </div>\r\n                <div className=\"hidden\">\r\n                    <img src={grid4}/>\r\n                    <h3>Extensible</h3>\r\n                    <p>Qovery Engine is built to be highly extensible. Adding the support of a Cloud provider or a Continuous Integration platform is as simple as implementing a simple programmatic interface.</p>\r\n                    <a>SEE MORE</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Grid\r\n","D:\\laCapsule\\portfolio\\qovery-clone\\src\\Home\\Footer\\Footer.js",["64","65","66","67"],"import React, { useEffect } from 'react'\r\nimport './Footer.css'\r\nimport comp1 from '../../assets/comp1.png';\r\nimport comp2 from '../../assets/comp2.png';\r\nimport comp3 from '../../assets/comp3.png';\r\nimport comp4 from '../../assets/comp4.png';\r\n\r\n\r\nfunction Footer() {\r\n\r\n    useEffect(()=>{\r\n        setInterval(()=>{\r\n            let image = document.querySelectorAll('#imageBox img')[3]\r\n            let imagebox = document.getElementById('imageBox')\r\n            imagebox.prepend(image);\r\n        },4000)\r\n    },[])\r\n\r\n    return (\r\n        <div id=\"footerContainer\">\r\n                <h3>They use it</h3>\r\n                <div id=\"carousel\">\r\n                        <div className='shaders'></div>\r\n                        <div className='shaders'></div>\r\n\r\n                        <div id='imageBox'>\r\n                            <img src={comp1}/>\r\n                            <img src={comp2}/>\r\n                            <img src={comp3}/>\r\n                            <img src={comp4}/>\r\n                        </div>\r\n                </div>\r\n                \r\n                <div id=\"footerBanner\">\r\n                    <p>For demonstration purposes only, not affiliated to any company, not for commercial purposes</p>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":44,"column":17,"nodeType":"74","endLine":44,"endColumn":36},{"ruleId":"72","severity":1,"message":"73","line":45,"column":17,"nodeType":"74","endLine":45,"endColumn":40},{"ruleId":"72","severity":1,"message":"73","line":46,"column":17,"nodeType":"74","endLine":46,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":47,"column":17,"nodeType":"74","endLine":47,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":33},{"ruleId":"72","severity":1,"message":"73","line":32,"column":17,"nodeType":"74","endLine":32,"endColumn":47},{"ruleId":"72","severity":1,"message":"73","line":33,"column":17,"nodeType":"74","endLine":33,"endColumn":57},{"ruleId":"72","severity":1,"message":"73","line":34,"column":17,"nodeType":"74","endLine":34,"endColumn":57},{"ruleId":"72","severity":1,"message":"73","line":35,"column":17,"nodeType":"74","endLine":35,"endColumn":59},{"ruleId":"72","severity":1,"message":"73","line":36,"column":17,"nodeType":"74","endLine":36,"endColumn":58},{"ruleId":"75","severity":1,"message":"79","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":37,"column":21,"nodeType":"74","endLine":37,"endColumn":39},{"ruleId":"80","severity":1,"message":"81","line":41,"column":21,"nodeType":"74","endLine":41,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":44,"column":21,"nodeType":"74","endLine":44,"endColumn":39},{"ruleId":"80","severity":1,"message":"81","line":48,"column":21,"nodeType":"74","endLine":48,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":53,"column":21,"nodeType":"74","endLine":53,"endColumn":39},{"ruleId":"80","severity":1,"message":"81","line":57,"column":21,"nodeType":"74","endLine":57,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":60,"column":21,"nodeType":"74","endLine":60,"endColumn":39},{"ruleId":"80","severity":1,"message":"81","line":63,"column":21,"nodeType":"74","endLine":63,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":27,"column":29,"nodeType":"74","endLine":27,"endColumn":47},{"ruleId":"72","severity":1,"message":"73","line":28,"column":29,"nodeType":"74","endLine":28,"endColumn":47},{"ruleId":"72","severity":1,"message":"73","line":29,"column":29,"nodeType":"74","endLine":29,"endColumn":47},{"ruleId":"72","severity":1,"message":"73","line":30,"column":29,"nodeType":"74","endLine":30,"endColumn":47},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Prism' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]